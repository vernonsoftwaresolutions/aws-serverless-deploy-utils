{
    "name": "aws-serverless-express-example",
    "version": "2.1.1",
    "description": "Example application for running a Node Express app on AWS Lambda using Amazon API Gateway.",
    "main": "lambda.js",
    "config": {
        "s3BucketName": "YOUR_UNIQUE_BUCKET_NAME",
        "region": "YOUR_AWS_REGION",
        "cloudFormationStackName": "YOUR_STACK_NAME",
        "functionName": "YOUR_SERVERLESS_EXPRESS_LAMBDA_FUNCTION_NAME",
        "accountId": "YOUR_ACCOUNT_ID",
        "dnsname": "YOUR_DNS_NAME",
        "hostedzonename": "YOUR_HOSTED_ZONE_NAME",
        "cfStage": "YOUR_STAGE"
    },
    "pre-commit": [
        "lint",
        "cover"
    ],
    "scripts": {
        "start": "node app.local.js",
        "config": "node ./node_modules/aws-serverless-deploy-utils/configure.js",
        "deconfig": "node ./node_modules/aws-serverless-deploy-utils/deconfigure.js",
        "cover": "nyc npm run test",
        "check-coverage": "nyc check-coverage --statements 100 --branches 100 --functions 100 --lines 100",
        "local": "node scripts/local",
        "invoke-lambda": "aws lambda invoke --function-name $npm_package_config_functionName --region $npm_package_config_region --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
        "create-bucket": "aws s3 mb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
        "delete-bucket": "aws s3 rb s3://$npm_package_config_s3BucketName --region $npm_package_config_region",
        "package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket $npm_package_config_s3BucketName --output-template packaged-sam.yaml --region $npm_package_config_region",
        "deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name $npm_package_config_cloudFormationStackName --capabilities CAPABILITY_IAM --parameter-overrides dnsname=$npm_package_config_dnsname hostedzonename=$npm_package_config_hostedzonename cfStage=$npm_package_config_cfStage --region $npm_package_config_region",
        "package-deploy": "npm run package && npm run deploy",
        "delete-stack": "aws cloudformation delete-stack --stack-name $npm_package_config_cloudFormationStackName --region $npm_package_config_region",
        "setup": "npm install && (aws s3api get-bucket-location --bucket $npm_package_config_s3BucketName --region $npm_package_config_region || npm run create-bucket) && npm run package-deploy",
        "win-config": "npm run config",
        "win-deconfig": "npm run deconfig",
        "win-local": "npm run local",
        "win-invoke-lambda": "aws lambda invoke --function-name %npm_package_config_functionName% --region %npm_package_config_region% --payload file://api-gateway-event.json lambda-invoke-response.json && cat lambda-invoke-response.json",
        "win-create-bucket": "aws s3 mb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
        "win-delete-bucket": "aws s3 rb s3://%npm_package_config_s3BucketName% --region %npm_package_config_region%",
        "win-package": "aws cloudformation package --template ./cloudformation.yaml --s3-bucket %npm_package_config_s3BucketName% --output-template packaged-sam.yaml --region %npm_package_config_region%",
        "win-deploy": "aws cloudformation deploy --template-file packaged-sam.yaml --stack-name %npm_package_config_cloudFormationStackName% --capabilities CAPABILITY_IAM --region %npm_package_config_region% --parameter-overrides dnsname=%npm_package_config_dnsname% hostedzonename=%npm_package_config_hostedzonename% cfStage=%npm_package_config_cfStage%",
        "win-package-deploy": "npm run win-package && npm run win-deploy",
        "win-delete-stack": "aws cloudformation delete-stack --stack-name %npm_package_config_cloudFormationStackName% --region %npm_package_config_region%",
        "win-setup": "npm install && (aws s3api get-bucket-location --bucket %npm_package_config_s3BucketName% --region %npm_package_config_region% || npm run win-create-bucket) && npm run win-package-deploy"
    },
    "license": "Apache-2.0",
    "dependencies": {
        "aws-serverless-express": "^3.0.0",
        "body-parser": "^1.17.1",
        "compression": "^1.6.2",
        "cors": "^2.8.3",
        "express": "^4.15.2",
        "winston": "^2.4.0"
    },
    "devDependencies": {
        "aws-serverless-deploy-utils": "0.0.1",
        "nyc": "^11.3.0"
    },
    "nyc": {
        "include": [],
        "exclude": [],
        "reporter": [
            "lcov",
            "text",
            "html"
        ]
    }
}